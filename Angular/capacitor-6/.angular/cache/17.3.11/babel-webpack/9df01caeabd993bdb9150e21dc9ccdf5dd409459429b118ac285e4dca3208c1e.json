{"ast":null,"code":"import { registerPlugin } from '@capacitor/core';\nconst ContentsquareCAP = registerPlugin('ContentsquareCAP', {\n  web: () => import('./web').then(m => new m.ContentsquareCAPWeb())\n});\n// Use ContentsquarePlugin to simulate a proxy. Here we can add some logic on the Javascript side before calling native methods.\nconst ContentsquarePlugin = {\n  optIn: function () {\n    console.log('Opt in proxy');\n    ContentsquareCAP.optIn();\n  },\n  optOut: function () {\n    console.log('Opt out proxy');\n    ContentsquareCAP.optOut();\n  },\n  sendTransaction(transactionItem) {\n    console.log('sendTransaction proxy', transactionItem);\n    return ContentsquareCAP.sendTransaction(transactionItem);\n  },\n  sendDynamicVar(dynamicVarItem) {\n    console.log('sendDynamicVar proxy', dynamicVarItem);\n    const dynVarValue = dynamicVarItem.dynVarValue;\n    if (typeof dynVarValue === 'string') {\n      return ContentsquareCAP.sendDynamicVarWithStringValue(dynamicVarItem);\n    } else if (Number.isInteger(dynVarValue) && dynVarValue >= 0) {\n      return ContentsquareCAP.sendDynamicVarWithIntValue(dynamicVarItem);\n    } else {\n      let callbackError = TypeError('The value of the DynamicVar should be either a string or an unsigned integer');\n      return new Promise((_resolve, reject) => {\n        reject(callbackError);\n      });\n    }\n  },\n  sendScreenName(screenName, cVarItems) {\n    console.log('sendScreenName proxy', screenName);\n    return ContentsquareCAP.sendScreenName({\n      name: screenName,\n      customVarItems: cVarItems\n    });\n  },\n  excludeURLForReplay(url) {\n    return ContentsquareCAP.excludeURLForReplay({\n      url: url.toString()\n    });\n  },\n  setPIISelectors(pii) {\n    return ContentsquareCAP.setPIISelectors(pii);\n  },\n  setCapturedElementsSelector(elements) {\n    return ContentsquareCAP.setCapturedElementsSelector({\n      elements\n    });\n  },\n  collect(telemetryItem) {\n    return ContentsquareCAP.collect(telemetryItem);\n  }\n};\ndocument.addEventListener('DOMContentLoaded', function () {\n  ContentsquareCAP.onReady();\n});\nexport * from './definitions';\nexport { ContentsquarePlugin };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}