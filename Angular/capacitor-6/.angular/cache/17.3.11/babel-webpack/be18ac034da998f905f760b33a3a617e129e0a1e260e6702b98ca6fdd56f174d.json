{"ast":null,"code":"import { CurrencyCode, ContentsquarePlugin } from '@contentsquare/capacitor-plugin';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\nfunction TransactionPage_ion_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function TransactionPage_ion_button_8_Template_ion_button_click_0_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.sendTransaction(item_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵpropertyInterpolate1(\"id\", \"btn-transaction-\", i_r4, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \" \");\n  }\n}\nexport let TransactionPage = /*#__PURE__*/(() => {\n  class TransactionPage {\n    constructor() {\n      this.transactionItems = [{\n        title: 'SendIntWithValidIntCurrency',\n        transactionValue: 10,\n        transactionCurrency: CurrencyCode.USD\n      }, {\n        title: 'SendIntWithInvalidIntCurrency',\n        transactionValue: 10,\n        transactionCurrency: 9999999\n      }, {\n        title: 'SendIntWithValidUppercaseStringCurrency',\n        transactionValue: 10,\n        transactionCurrency: 'USD'\n      }, {\n        title: 'SendIntWithValidLowercaseStringCurrency',\n        transactionValue: 10,\n        transactionCurrency: 'usd'\n      }, {\n        title: 'SendIntWithInvalidStringCurrency',\n        transactionValue: 10,\n        transactionCurrency: 'DEFINITELY NOT VALID'\n      }, {\n        title: 'SendIntWithID',\n        transactionValue: 10,\n        transactionCurrency: CurrencyCode.USD,\n        transactionId: 'my usd transaction'\n      }, {\n        title: 'SendFloat',\n        transactionValue: 50.5,\n        transactionCurrency: CurrencyCode.MAD\n      }, {\n        title: 'SendZero',\n        transactionValue: 0,\n        transactionCurrency: CurrencyCode.EUR\n      }, {\n        title: 'SendNeg',\n        transactionValue: -10,\n        transactionCurrency: CurrencyCode.GBP\n      }];\n    }\n    ngOnInit() {}\n    sendTransaction(item) {\n      const transactionItem = {\n        transactionValue: item.transactionValue,\n        transactionCurrency: item.transactionCurrency,\n        transactionId: item.transactionId || null\n      };\n      ContentsquarePlugin.sendTransaction(transactionItem).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n    static {\n      this.ɵfac = function TransactionPage_Factory(t) {\n        return new (t || TransactionPage)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TransactionPage,\n        selectors: [[\"app-transaction\"]],\n        decls: 9,\n        vars: 1,\n        consts: [[\"slot\", \"start\"], [\"id\", \"back-button-transaction\"], [\"expand\", \"block\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"expand\", \"block\", 3, \"click\", \"id\"]],\n        template: function TransactionPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n            i0.ɵɵelement(3, \"ion-back-button\", 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"ion-title\");\n            i0.ɵɵtext(5, \"Transaction\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-card\");\n            i0.ɵɵtemplate(8, TransactionPage_ion_button_8_Template, 2, 3, \"ion-button\", 2);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngForOf\", ctx.transactionItems);\n          }\n        },\n        dependencies: [i1.NgForOf, i2.IonButton, i2.IonButtons, i2.IonCard, i2.IonContent, i2.IonHeader, i2.IonTitle, i2.IonToolbar, i2.IonBackButton]\n      });\n    }\n  }\n  return TransactionPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}