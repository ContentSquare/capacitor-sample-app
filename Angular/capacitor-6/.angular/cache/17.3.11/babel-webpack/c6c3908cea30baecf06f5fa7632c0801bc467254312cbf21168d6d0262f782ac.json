{"ast":null,"code":"import _asyncToGenerator from \"/Users/jean-baptiste.matte/Documents/dev/capacitor/capacitor-sample-app/Angular/capacitor-6/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nexport let PickerPage = /*#__PURE__*/(() => {\n  class PickerPage {\n    constructor(pickerController) {\n      this.pickerController = pickerController;\n      this.defaultColumnOptions = [['Dog', 'Cat', 'Bird', 'Lizard', 'Chinchilla']];\n      this.multiColumnOptions = [['Minified', 'Responsive', 'Full Stack', 'Mobile First', 'Serverless'], ['Tomato', 'Avocado', 'Onion', 'Potato', 'Artichoke']];\n    }\n    ngOnInit() {}\n    openPicker(numColumns = 1, numOptions = 5, columnOptions = this.defaultColumnOptions) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const picker = yield _this.pickerController.create({\n          columns: _this.getColumns(numColumns, numOptions, columnOptions),\n          buttons: [{\n            text: 'Cancel',\n            role: 'cancel'\n          }, {\n            text: 'Confirm',\n            handler: value => {\n              console.log(`Got Value ${value}`);\n            }\n          }]\n        });\n        yield picker.present();\n      })();\n    }\n    getColumns(numColumns, numOptions, columnOptions) {\n      const columns = [];\n      for (let i = 0; i < numColumns; i++) {\n        columns.push({\n          name: `col-${i}`,\n          options: this.getColumnOptions(i, numOptions, columnOptions)\n        });\n      }\n      return columns;\n    }\n    getColumnOptions(columnIndex, numOptions, columnOptions) {\n      const options = [];\n      for (let i = 0; i < numOptions; i++) {\n        options.push({\n          text: columnOptions[columnIndex][i % numOptions],\n          value: i\n        });\n      }\n      return options;\n    }\n    static {\n      this.ɵfac = function PickerPage_Factory(t) {\n        return new (t || PickerPage)(i0.ɵɵdirectiveInject(i1.PickerController));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: PickerPage,\n        selectors: [[\"app-picker\"]],\n        decls: 12,\n        vars: 0,\n        consts: [[\"translucent\", \"true\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\", \"id\", \"back-button-picker\"], [\"fullscreen\", \"\", 1, \"component-content\"], [1, \"ion-padding-start\", \"ion-padding-end\"], [\"expand\", \"block\", \"id\", \"btn-picker-0\", 3, \"click\"], [\"expand\", \"block\", \"id\", \"btn-picker-1\", 3, \"click\"]],\n        template: function PickerPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n            i0.ɵɵelement(3, \"ion-back-button\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"ion-title\");\n            i0.ɵɵtext(5, \"Picker\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"div\", 4)(8, \"ion-button\", 5);\n            i0.ɵɵlistener(\"click\", function PickerPage_Template_ion_button_click_8_listener() {\n              return ctx.openPicker();\n            });\n            i0.ɵɵtext(9, \"Open Single Column Picker\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"ion-button\", 6);\n            i0.ɵɵlistener(\"click\", function PickerPage_Template_ion_button_click_10_listener() {\n              return ctx.openPicker(2, 5, ctx.multiColumnOptions);\n            });\n            i0.ɵɵtext(11, \"Open Multiple Column Picker\");\n            i0.ɵɵelementEnd()()();\n          }\n        },\n        dependencies: [i1.IonButton, i1.IonButtons, i1.IonContent, i1.IonHeader, i1.IonTitle, i1.IonToolbar, i1.IonBackButton]\n      });\n    }\n  }\n  return PickerPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}