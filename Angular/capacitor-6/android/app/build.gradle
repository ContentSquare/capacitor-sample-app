apply plugin: 'com.android.application'

android {
    namespace "com.contentsquare.capacitor.testapp"
    signingConfigs {
        csSigningConfig {
        storeFile file('../cs_release_key')
        storePassword 'sampleappcs'
        keyAlias 'key0'
        keyPassword 'sampleappcs'
        }
    }
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.contentsquare.capacitor.testapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
         applicationVariants.all {
            variant ->
                variant.outputs.each {
                output ->
                    def flavor = variant.name
                    project.ext { appName = 'AppCapacitor5' }
                    output.outputFileName = "${project.ext.appName}_${flavor}.apk"
                }
            }
    }
    flavorDimensions "environment"
    productFlavors {
        dev {
        dimension "environment"
        manifestPlaceholders = [displayName: "Sample App Capacitor5"]
        signingConfig signingConfigs.csSigningConfig
        }
        qa {
        dimension "environment"
        applicationIdSuffix ".qa"
        manifestPlaceholders = [displayName: "Sample App Capacitor5 - QA"]
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
